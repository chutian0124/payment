server:
  port: 3020

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.123.105:3306/xxpaydb?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
    username: xxpay
    password: xxpay
    initialSize: 5    # 初始化大小
    minIdle: 5        # 最小
    maxActive: 20     # 最大
    maxWait: 60000    # 获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000      # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true                    # 打开PSCache
    maxPoolPreparedStatementPerConnectionSize: 20   # 指定每个连接上PSCache的大小
    #filters: stat,wall,log4j                        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
  profiles:
    active: prod
    include:
    #- activeMQ
    - rabbitMQ # 需要安装延迟队列插件：https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-rabbitmq/

  activemq:
    broker-url: failover:(tcp://127.0.0.1:61616?wireFormat.maxInactivityDuration=0)
    in-memory: true
    pool:
      enabled: true # 如果此处设置为true，需要加activemq-pool依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败

  rabbitMQ:
    addresses: 192.168.123.116:5672
    username: root
    password: root
    dynamic: true

config:
  ali:
    appid: 2016091900550981
    private_key: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC3CS50fnr+N43kKNkBR9qk8gVNWEjtVkLzkCLfy28pZv7w9lAIe7plEboGhcOW1tSKI1XyS+5wm3PruiBUY60OFg1F6MkKUAOhuBrtFsOWxHAYvUsGenBYib7U2kD9bptcjZ33nIUdVZ/GfRbqBkidvoocrJzbCzSY2QpULfLlf8PJLa2h2BuR4rVcgARwQp7AFYO2XFnyscfwDbMdVORu8cWhSKduxvTV9nORCBW6aJjTi6hyPBAbVE/uYr87JSS1YM9gBglrLlSwEnlU9ggbhQ1CJ+yWjcz0qdg8PAODZYOSTdjd4Qm8L5MZIeh1rZqZlgpsxBiLNPvNOdaVpi05AgMBAAECggEBAJJjTnsvOTEev2XuYXiLvkvToPf2FwVyy0M/URUKAFLtpBKV/PZ79lylK9HRo9d85CnDDxclMYNwYOr0Rq0Xty2f52e1QSz1R6JMu4RJg46Od1Th+CIrRLUbHbvg/r9yeeExBlkmHrSSaaH3I59x/Rvka1N5nk32DU/9riwbP7vZ834YeV2IsS5y8MpweyP2uYwoaBRcctoxQjTQr/Hsh4wKwN7q/+ys3EEcezBKnmgnHyM/7A4hhfzWKQkpy1TX3k4E4/2db2z02GhZyQJGfjGq7nllGfVJS1TtCMEgtkk+519g1JFQPpcuXD6v+SWzjwlKt8SVJjrtyLtMzZBiCXECgYEA5yGPd1LsR3Jpm7/71CwVv9mC3/ukM9YvA1mDAZ6sqkYApOLaHnFwzfkpjPjLSu2gk/yyn8k0bfuB9Th3jhTr1p1t26C9Xlt1eM6HBPzL52EDV7XAwzMER5O3bzLwLm3oA9bqK+eQBOpbxJXgu0Xu78IPbu5Sx+54REnI7ZjgS2UCgYEAyrraDMOcnqQxY/rNc7pqQaXfll4b/5Kc1lilZ9guKpityBCd/CJAaHxB+dvR1jhWGwzhWZbqsIaXmCknq1spX1XAX1OmohegzY4VlvPrvvA3a92HqKMgfYdkiyBkDjLkPiHd08LAR2/IwvxrEXdImvbkhz9z7IWlJJlvuVPUP0UCgYBZHeqIMpPh1G593B9IJptYNpCstgUQ65OC8h9+H2Up3gXfjYxWUp0Q/fIUZdVUlZzlknh4/YZWpbPtDhGi2dQ5EshJ94cse40mwFL1DFe+Zfx49B5X5TLQOldu67AJ5tyfplzyAr3X91jcyoE1E/jVvvheaEvIxNzgT6bGXbyVtQKBgF0G2vIKfP8LByMCvm5Bd2rCa9P7QUvIgjGVoekB+UVQpEXu4iAFs5p+kmPOK/7qAREOmwXaS71PNZb8I5jtDxIRLmJP52HwB7jrXxrSuTX30uarVAndORaBH3D8Hw2o6rVcIwd+EW92ayCWZacxHl8Fth4dztsVBI/D3NGlFvslAoGBALBpToV0isQIkCNbTurTayunDVVGksziTjGLoxLf0oZexxxN8SEZCTWsoRDJl/HhofRXoPnPUye7w+rTqgluqgydOXfXv97dPUMviQdFtvpBwPQcqq6wX+AH/0sActce4XChWzAWhRB0zYd8TfMQKnqEtAwXHMmeSFeWFp5tptEJ
    alipay_public_key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxwnkDKtltp5bOMvdHdeJiZFDR99x6NEr3i+PoqzIf/bfMyYHhgrwwLFkVKcx+37f0d0kLM820Cth8GG2jFo3CwHV3IiNcXcHPNI9EXG5218JLkuvHzu4uhWOv9JLB7hp5az7a3znig9lIh8KyOEqLWuuT8O1d5NtMCcGr6xf2iQGylup2ngwikZnychqEMIaE+Auvczk95xn1o5zur2yG5cAiEDIcSMFUbhNYL+7TAuI9+IPAp6LuodUzEkYeL5at6DG6MX/jOvyO0qGgdmHdQgsEA13OlBeotCc1CK+yV2am/yMdKxf83+u52SJRb95jt5mlO8G25IhQUoxcSpx5QIDAQAB
    isSandbox: 1
    notify_url: http://test.wezoz.com/notify/pay/aliPayNotifyRes.htm
    return_url: http://test.wezoz.com/notify/pay/aliPayNotifyRes.htm
  wx:
    certRootPath: /home/xxpay/service/cert
    notifyUrl: http://api.xxpay.org/notify/pay/wxPayNotifyRes.htm

logging:
  file: ./log/xxpay4spring-boot.log
